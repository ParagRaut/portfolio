<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Parag Raut Portfolio</title><link>https://paragraut.me/</link><description>Recent content on Parag Raut Portfolio</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 16 Dec 2023 12:47:14 +0100</lastBuildDate><atom:link href="https://paragraut.me/index.xml" rel="self" type="application/rss+xml"/><item><title>Odido</title><link>https://paragraut.me/projects/odido/</link><pubDate>Sat, 16 Dec 2023 12:32:02 +0100</pubDate><guid>https://paragraut.me/projects/odido/</guid><description>I ‚ô•Ô∏è Odido I&amp;rsquo;ve been working for Odido NL B.V. (formerly T-Mobile NL B.V.) since June 2016. Development efforts mainly focuses on all the telecom domain related applications including customer facing applications such as self service portal &amp;amp; web apis for apps, internal facing applications for business and customer care executives.
Work also includes owning few responsibilities such as SAST tooling administration and maintaining CI/CD pipelines.
Also as side-projects created some manual time/effort saving applications thanks to the acquired functional/domain knowledge and experience.</description></item><item><title>KPN</title><link>https://paragraut.me/projects/kpn/</link><pubDate>Sat, 16 Dec 2023 12:47:14 +0100</pubDate><guid>https://paragraut.me/projects/kpn/</guid><description>In KPN project I&amp;rsquo;ve played key role in creating POCs for open source test automation frameworks to enable DevOps practices and also implemented automated tests in CI/CD process in Java ecosystem. It was a big learning opportunity for me and helped me to grow in more intricate parts of framework and CI/CD process setup.</description></item><item><title>Sideprojects</title><link>https://paragraut.me/projects/sideprojects/</link><pubDate>Sat, 31 Oct 2020 17:05:22 +0100</pubDate><guid>https://paragraut.me/projects/sideprojects/</guid><description>Now üëÜüèΩ that&amp;rsquo;s every developer&amp;rsquo;s mindset In my spare time I do side-projects, some of them I loved doing are:
ComicsAppWasm - It is a comic viewer app which I built while learning Blazor WebAssembly. ComicsApi - It is quite similar to above project, the only difference is it&amp;rsquo;s an webapi and written using C# &amp;amp; Golang. This portfolio/blog itself was a side-project which is built with Hugo and Introduction theme, and there are a few more&amp;hellip; Checkout my github repos @ GITHUB/ParagRaut Image credit @vincentdnl</description></item><item><title>Photography</title><link>https://paragraut.me/projects/photography/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://paragraut.me/projects/photography/</guid><description>Sometimes I take pictures But&amp;hellip; these pictures are not mine, this is just a placeholder for future projects</description></item><item><title>Working in an Enterprise</title><link>https://paragraut.me/blog/workinginenterprise/</link><pubDate>Sun, 20 Dec 2020 11:56:46 +0100</pubDate><guid>https://paragraut.me/blog/workinginenterprise/</guid><description>Working in an enterprise has its own benefits and detriments. On one side you get exposed to a huge company wide technical/functional architecture and few too many business processes. And on the other side once you get well acquainted and spend quite a substantial time with it, the excitement dies. You are mostly locked to &amp;ldquo;rigid/legacy/boring/meh/same o&amp;rsquo; same o&amp;rsquo;/non-bleeding edge/you name it&amp;rdquo; technology stack.
I know legacy software is not always useless as whole business of enterprise relies on it.</description></item><item><title>Hello World with Golang</title><link>https://paragraut.me/blog/golang/</link><pubDate>Sun, 01 Nov 2020 15:38:46 +0100</pubDate><guid>https://paragraut.me/blog/golang/</guid><description>Hello world is first stepping stone while learning any new computer language. Writing hello world in go was very exciting for me as I tried my hand for the first time in systems programming language
Code block:
package main import &amp;#34;fmt&amp;#34; func main() { fmt.Println(&amp;#34;hello world&amp;#34;) } So here is the summary, in Golang you always need to know few things: First line of program is always package declaration Import go modules/packages to do basic readily available things like printing and scanning, make http requests func main() every program&amp;rsquo;s entry point As easy as it looks to me Golang felt like the best gateway to systems programming</description></item></channel></rss>